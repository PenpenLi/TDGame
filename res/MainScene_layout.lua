--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
local Scene=cc.Node:create()
Scene:setName("Scene")

--Create Sprite_1
local Sprite_1 = cc.Sprite:create("00080.jpg")
Sprite_1:setName("Sprite_1")
Sprite_1:setTag(51)
Sprite_1:setCascadeColorEnabled(true)
Sprite_1:setCascadeOpacityEnabled(true)
Sprite_1:setAnchorPoint(0.0000, 0.0000)
Sprite_1:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Sprite_1)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(1280.0000, 721.0000))
layout:setLeftMargin(0.0000)
layout:setRightMargin(320.0000)
layout:setTopMargin(80.0000)
layout:setBottomMargin(0.0000)
Scene:addChild(Sprite_1)

--Create ProjectNode_1
innerCSD = require("editor_layout")
innerProject = innerCSD.create(callBackProvider)
local ProjectNode_1 = innerProject.root
ProjectNode_1.animation = innerProject.animation
ProjectNode_1:setName("ProjectNode_1")
ProjectNode_1:setTag(17)
ProjectNode_1:setCascadeColorEnabled(true)
ProjectNode_1:setCascadeOpacityEnabled(true)
ProjectNode_1:setVisible(false)
ProjectNode_1:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(ProjectNode_1)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize(cc.size(1280.0000, 720.0000))
layout:setLeftMargin(0.0000)
layout:setRightMargin(0.0000)
layout:setTopMargin(0.0000)
layout:setBottomMargin(0.0000)
innerProject.animation:setTimeSpeed(1.0000)
ProjectNode_1:runAction(innerProject.animation)
Scene:addChild(ProjectNode_1)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List
local move = {name="move", startIndex=0, endIndex=300}
result['animation']:addAnimationInfo(move)

result['root'] = Scene
return result;
end

return Result

